grammar net.unicoen.testcasegenerator.TestCaseGenerator with org.eclipse.xtext.common.Terminals

generate testCaseGenerator "http://www.unicoen.net/testcasegenerator/TestCaseGenerator"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

File:
	name=ClassName target=Target cases+=TestCase*;

ClassName:
	'class' name=ID;

Target:
	'target' name=ID;

TestCase:
	'test' name=ID LPAREN code=CodeDeclaration node=NodeDeclaration RPAREN;

CodeDeclaration:
	name='actual' COLON body=Program;

Program:
	name=STRING;

NodeDeclaration:
	name='expected' COLON value=NodeValue;

NodeValue:
	arch=NodeArchitecture
	| list=List
	| literal=Literal;

NodeArchitecture:
	nodeType=ID ('as' castType=ID)? LPAREN children+=ChildDeclaration* RPAREN;

ChildDeclaration:
	fieldName=ID COLON value=NodeValue;

List:
	LPAREN value+=NodeValue (COMMA value+=NodeValue)* RPAREN;

Literal:
	INT
	| FLOAT
	| STRING
	| BOOLEAN;

terminal FLOAT returns ecore::EDouble:
	('0'..'9')+ '.' ('0'..'9')+;

terminal BOOLEAN returns ecore::EBoolean:
	'true' | 'false';

terminal LPAREN:
	'{';

terminal RPAREN:
	'}';

terminal COLON:
	':';

terminal COMMA:
	',';