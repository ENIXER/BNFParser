/*
 * generated by Xtext
 */
package net.unicoen.testcasegenerator.formatting

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import com.google.inject.Inject;
import net.unicoen.testcasegenerator.services.TestCaseGeneratorGrammarAccess

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class TestCaseGeneratorFormatter extends AbstractDeclarativeFormatter {

	@Inject
	extension TestCaseGeneratorGrammarAccess TestCaseGeneratorGrammarAccess

	override protected void configureFormatting(FormattingConfig c) {
		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		c.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)

		c.setLinewrap(1, 2, 2).after(TestCaseGeneratorGrammarAccess.LPARENRule)
		c.setLinewrap.around(TestCaseGeneratorGrammarAccess.RPARENRule)
		c.setLinewrap.around(TestCaseGeneratorGrammarAccess.codeDeclarationRule)
		c.setLinewrap.after(TestCaseGeneratorGrammarAccess.classNameRule)
		c.setLinewrap.around(TestCaseGeneratorGrammarAccess.childDeclarationRule)
		c.setLinewrap(2, 2, 2).before(TestCaseGeneratorGrammarAccess.testCaseRule)

		c.setNoSpace.before(TestCaseGeneratorGrammarAccess.COMMARule)

		c.setIndentationIncrement.after(TestCaseGeneratorGrammarAccess.LPARENRule)
		c.setIndentationDecrement.before(TestCaseGeneratorGrammarAccess.RPARENRule)
	}
}
